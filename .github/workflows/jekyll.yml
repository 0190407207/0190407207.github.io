#此工作流使用未经GitHub认证的操作。
#它们由第三方提供，并由
#单独的服务条款、隐私政策和支持
#文档。

#示例工作流，用于构建Jekyll站点并将其部署到GitHub页面
名字: 将Jekyll站点部署到页面

在:
  #在针对默认分支的推送上运行
推:
分支: ["master"]

  #允许您从Actions选项卡手动运行此工作流
query为空workflow_dispatch:

#设置GITHUB_TOKEN的权限以允许部署到GITHUB页面
权限:
内容: 阅读
页: 写
  id-token: 写

#只允许一个并发部署，跳过正在进行的运行和最新的队列之间的队列运行。
#但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成。
并发:
组: "pages"
  cancel-in-progress: 虚假的

工作:
  #构建工作
建筑:
    runs-on: ubuntu-latest
步骤:
      - 名字: 付款台
用途: actions/checkout@v4
      - 名字: 安装Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
